---
name: performance

on:
  pull_request:
    types: [opened, reopened]

jobs:
  benchmark:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-go@v5
        with:
          go-version-file: go.mod

      - name: Install dependencies
        run: go mod download

      - name: Set Golang binaries path
        run: echo "`go env GOPATH`/bin" >> $GITHUB_PATH

      - name: Run golang benchmarks
        run: go test -run="^$" -bench=. -count=10 ./internal/... > benchmark.txt

      - name: Download baseline benchmark
        id: download
        uses: actions/download-artifact@v4
        with:
          name: baseline-benchmark
          path: stats/benchmark.txt
        continue-on-error: true

      - name: Use current benchmark as reference
        if: steps.download.outcome != 'success'
        run: |
          mkdir stats
          cp benchmark.txt stats/benchmark.txt

      - name: Install benchstat
        run: go install golang.org/x/perf/cmd/benchstat@latest

      - name: Compare benchmark results
        run: |
          benchstat -table col -row .name -format=csv stats/benchmark.txt \
          benchmark.txt | grep '^[A-Z]' > stats.csv

      - name: Upload benchstat results
        uses: actions/upload-artifact@v4
        with:
          name: benchstat-results
          path: stats.csv
          overwrite: true

  parse-results:
    runs-on: ubuntu-latest
    needs: [benchmark]
    steps:
      - uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      - name: Download benchstats result
        uses: actions/download-artifact@v4
        with:
          name: benchstat-results
          path: stats.csv

      - name: Install dependencies
        run: |
          pip install --upgrade pip
          pip install pandas numpy tabulate

      - name: Review the results
        id: results
        run: |
          import pandas as pd
          import os

          # Threshold for increase in compute resource utilization
          threshold: int = 10
          df = pd.read_csv('stats.csv',
            names=['name','reference','secs/op','benchmark','_secs/op','vs_base','P'])

          # Render the benchstat output to markdown
          out = df.to_markdown()

          s1 = df.vs_base.str.replace('~','0')
          s1 = pd.to_numeric(s1.str.rstrip('%'))
          breach = "true" if len(s1[s1 > threshold]) > 0 else "false"

          gh_output = os.environ['GITHUB_OUTPUT']
          with open(gh_output, 'a') as f:
            # vs_base captures change in compute resource utilization
            print(f'breach={breach}', file=f)
            # capture benchstat results in markdown
            print(f'report={out}', file=f)
        shell: python

      - name: Post results
        uses: actions/github-script@v7
        script: |
          github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: ${{ steps.results.output.report }}
          })

      - name: Parse 'vs base' results
        run: |
          if [ "${{ steps.results.output.breach }}" == "true" ]
          then
            exit 1
          else
            exit 0
        shell: bash
